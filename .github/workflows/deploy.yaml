name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build Docker Image
        run: docker build -t jagrati_app:latest .

      - name: Save docker image as tar
        run: docker save jagrati_app:latest -o jagrati_app.tar

      - name: Copy image to server via SCP
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "jagrati_app.tar"
          target: "/home/${{ secrets.USERNAME}}"

      - name: Deploy on Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Start or restart PostgreSQL container
            docker stop jagrati_postgres || true
            docker rm jagrati_postgres || true
            docker run -d \
              --name jagrati_postgres \
              -e POSTGRES_DB=${{secrets.POSTGRES_DB}} \
              -e POSTGRES_USER=${{secrets.POSTGRES_USER}} \
              -e POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} \
              -v jagrati_postgres_data:/var/lib/postgresql/data \
              -p 5432:5432 \
              postgres:latest
            # Wait for PostgreSQL to be ready
            until docker exec jagrati_postgres pg_isready -U ${{secrets.POSTGRES_USER}}; do sleep 2; done
            # Load and run app
            docker load -i ~/jagrati_app.tar
            docker stop jagrati_app || true
            docker rm jagrati_app || true
            docker ps -q --filter "publish=8080" | xargs -r docker stop
            docker ps -a -q --filter "publish=8080" | xargs -r docker rm
            docker run -d \
              --name jagrati_app \
              --link jagrati_postgres:postgres \
              -p 8080:8080 \
              -e JWT_SECRET_BASE_64=${{secrets.JWT_SECRET_BASE_64}} \
              -e IMAGE_KIT_PRIVATE_KEY=${{secrets.IMAGE_KIT_PRIVATE_KEY}} \
              -e OAUTH2_CLIENT_ID=${{secrets.OAUTH2_CLIENT_ID}} \
              -e OAUTH2_SECRET=${{secrets.OAUTH2_SECRET}} \
              -e GMAIL_PASS=${{secrets.GMAIL_PASS}} \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${{secrets.POSTGRES_DB}} \
              -e SPRING_DATASOURCE_USERNAME=${{secrets.POSTGRES_USER}} \
              -e SPRING_DATASOURCE_PASSWORD=${{secrets.POSTGRES_PASSWORD}} \
              -e ADMIN_MAIL=${{secrets.ADMIN_MAIL}} \
              -e ADMIN_PASS=${{secrets.ADMIN_PASS}} \
              -e MAIL_ID=${{secrets.MAIL_ID}} \
              -e BASE_URL=${{secrets.BASE_URL}} \
              jagrati_app:latest