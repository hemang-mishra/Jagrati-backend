CREATE TABLE email_verification_token
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email      VARCHAR(255)                            NOT NULL,
    token      VARCHAR(255)                            NOT NULL,
    expires_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_email_verification_token PRIMARY KEY (id)
);

CREATE TABLE groups
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    name        VARCHAR(50)                             NOT NULL,
    description TEXT,
    is_active   BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_groups PRIMARY KEY (id)
);

CREATE TABLE password_reset_token
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token      VARCHAR(255),
    email      VARCHAR(255),
    expires_at TIMESTAMP WITHOUT TIME ZONE,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_passwordresettoken PRIMARY KEY (id)
);

CREATE TABLE permissions
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    name        VARCHAR(50)                             NOT NULL,
    description VARCHAR(255),
    module      VARCHAR(50)                             NOT NULL,
    action      VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_permissions PRIMARY KEY (id)
);

CREATE TABLE refresh_tokens
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at           TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at           TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    email                VARCHAR(255),
    hashed_refresh_token VARCHAR(255),
    expires_at           TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_refresh_tokens PRIMARY KEY (id)
);

CREATE TABLE role_permissions
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at    TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    role_id       BIGINT                                  NOT NULL,
    permission_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_role_permissions PRIMARY KEY (id)
);

CREATE TABLE role_transitions
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at       TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at       TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    user_pid         VARCHAR(50)                             NOT NULL,
    from_role_id     BIGINT                                  NOT NULL,
    to_role_id       BIGINT                                  NOT NULL,
    transition_type  VARCHAR(20)                             NOT NULL,
    status           VARCHAR(20)                             NOT NULL,
    requested_by_pid VARCHAR(50)                             NOT NULL,
    approved_by_pid  VARCHAR(50),
    approved_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_role_transitions PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at  TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    name        VARCHAR(50)                             NOT NULL,
    description VARCHAR(255),
    is_active   BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE student_attendance
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at     TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at     TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    date           date                                    NOT NULL,
    student_pid    VARCHAR(50)                             NOT NULL,
    marked_by_user VARCHAR(50)                             NOT NULL,
    remarks        VARCHAR(255),
    CONSTRAINT pk_student_attendance PRIMARY KEY (id)
);

CREATE TABLE student_group_history
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    student_pid     VARCHAR(50)                             NOT NULL,
    from_group_id   BIGINT,
    to_group_id     BIGINT                                  NOT NULL,
    assigned_by_pid VARCHAR(50)                             NOT NULL,
    assigned_at     TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_student_group_history PRIMARY KEY (id)
);

CREATE TABLE students
(
    pid                  VARCHAR(50) NOT NULL,
    created_at           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    first_name           VARCHAR(50) NOT NULL,
    last_name            VARCHAR(50) NOT NULL,
    year_of_birth        INTEGER,
    gender               VARCHAR(10) NOT NULL,
    profile_pic_data     TEXT,
    school_class         VARCHAR(100),
    village_id           BIGINT      NOT NULL,
    group_id             BIGINT      NOT NULL,
    primary_contact_no   VARCHAR(20),
    secondary_contact_no VARCHAR(20),
    fathers_name         VARCHAR(100),
    mothers_name         VARCHAR(100),
    is_active            BOOLEAN     NOT NULL,
    registered_by_pid    VARCHAR(50) NOT NULL,
    CONSTRAINT pk_students PRIMARY KEY (pid)
);

CREATE TABLE user_roles
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    user_pid        VARCHAR(50)                             NOT NULL,
    role_id         BIGINT                                  NOT NULL,
    assigned_by_pid VARCHAR(50)                             NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (id)
);

CREATE TABLE users
(
    pid                 VARCHAR(50)  NOT NULL,
    created_at          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    first_name          VARCHAR(50)  NOT NULL,
    last_name           VARCHAR(50)  NOT NULL,
    email               VARCHAR(255) NOT NULL,
    password_hash       VARCHAR(255) NOT NULL,
    is_active           BOOLEAN      NOT NULL,
    is_email_verified   BOOLEAN      NOT NULL,
    profile_picture_url VARCHAR(512),
    CONSTRAINT pk_users PRIMARY KEY (pid)
);

CREATE TABLE villages
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    name       VARCHAR(100)                            NOT NULL,
    is_active  BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_villages PRIMARY KEY (id)
);

CREATE TABLE volunteer_attendance
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at      TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    volunteer_pid   VARCHAR(50)                             NOT NULL,
    marked_by_user  VARCHAR(50)                             NOT NULL,
    attendance_date date                                    NOT NULL,
    remarks         VARCHAR(255),
    CONSTRAINT pk_volunteer_attendance PRIMARY KEY (id)
);

CREATE TABLE volunteer_requests
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at       TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    updated_at       TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    roll_number      VARCHAR(20),
    first_name       VARCHAR(50)                             NOT NULL,
    last_name        VARCHAR(50)                             NOT NULL,
    gender           VARCHAR(10)                             NOT NULL,
    alternate_email  VARCHAR(255),
    batch            VARCHAR(20),
    programme        VARCHAR(100),
    street_address_1 VARCHAR(255),
    street_address_2 VARCHAR(255),
    pincode          VARCHAR(10),
    city             VARCHAR(100),
    state            VARCHAR(100),
    date_of_birth    date                                    NOT NULL,
    contact_number   VARCHAR(20),
    college          VARCHAR(100),
    branch           VARCHAR(100),
    year_of_study    INTEGER,
    status           VARCHAR(20)                             NOT NULL,
    reason           VARCHAR(255),
    requested_by_pid VARCHAR(50)                             NOT NULL,
    reviewed_by_pid  VARCHAR(50),
    reviewed_at      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_volunteer_requests PRIMARY KEY (id)
);

CREATE TABLE volunteers
(
    pid                 VARCHAR(50) NOT NULL,
    created_at          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    roll_number         VARCHAR(20),
    first_name          VARCHAR(50) NOT NULL,
    last_name           VARCHAR(50) NOT NULL,
    gender              VARCHAR(10) NOT NULL,
    alternate_email     VARCHAR(255),
    batch               VARCHAR(20),
    programme           VARCHAR(100),
    street_address_1    TEXT,
    street_address_2    TEXT,
    pincode             VARCHAR(10),
    city                VARCHAR(100),
    state               VARCHAR(100),
    date_of_birth       date        NOT NULL,
    contact_number      VARCHAR(20),
    college             VARCHAR(100),
    branch              VARCHAR(100),
    year_of_study       INTEGER,
    profile_pic_details TEXT,
    is_active           BOOLEAN     NOT NULL,
    CONSTRAINT pk_volunteers PRIMARY KEY (pid)
);

ALTER TABLE volunteer_attendance
    ADD CONSTRAINT uc_354052152f8397b0c6bf28481 UNIQUE (volunteer_pid, attendance_date);

ALTER TABLE student_attendance
    ADD CONSTRAINT uc_a4a3f73aebc8c50eb84b55715 UNIQUE (student_pid, date);

ALTER TABLE email_verification_token
    ADD CONSTRAINT uc_email_verification_token_email UNIQUE (email);

ALTER TABLE email_verification_token
    ADD CONSTRAINT uc_email_verification_token_token UNIQUE (token);

ALTER TABLE roles
    ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE volunteers
    ADD CONSTRAINT uc_volunteers_roll_number UNIQUE (roll_number);

CREATE INDEX idx_user_email ON users (email);

ALTER TABLE role_permissions
    ADD CONSTRAINT FK_ROLE_PERMISSIONS_ON_PERMISSION FOREIGN KEY (permission_id) REFERENCES permissions (id);

ALTER TABLE role_permissions
    ADD CONSTRAINT FK_ROLE_PERMISSIONS_ON_ROLE FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE role_transitions
    ADD CONSTRAINT FK_ROLE_TRANSITIONS_ON_APPROVED_BY_PID FOREIGN KEY (approved_by_pid) REFERENCES users (pid);

ALTER TABLE role_transitions
    ADD CONSTRAINT FK_ROLE_TRANSITIONS_ON_FROM_ROLE FOREIGN KEY (from_role_id) REFERENCES roles (id);

ALTER TABLE role_transitions
    ADD CONSTRAINT FK_ROLE_TRANSITIONS_ON_REQUESTED_BY_PID FOREIGN KEY (requested_by_pid) REFERENCES users (pid);

ALTER TABLE role_transitions
    ADD CONSTRAINT FK_ROLE_TRANSITIONS_ON_TO_ROLE FOREIGN KEY (to_role_id) REFERENCES roles (id);

ALTER TABLE role_transitions
    ADD CONSTRAINT FK_ROLE_TRANSITIONS_ON_USER_PID FOREIGN KEY (user_pid) REFERENCES users (pid);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_GROUP FOREIGN KEY (group_id) REFERENCES groups (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_REGISTERED_BY_PID FOREIGN KEY (registered_by_pid) REFERENCES users (pid);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_VILLAGE FOREIGN KEY (village_id) REFERENCES villages (id);

ALTER TABLE student_attendance
    ADD CONSTRAINT FK_STUDENT_ATTENDANCE_ON_MARKED_BY_USER FOREIGN KEY (marked_by_user) REFERENCES users (pid);

ALTER TABLE student_attendance
    ADD CONSTRAINT FK_STUDENT_ATTENDANCE_ON_STUDENT_PID FOREIGN KEY (student_pid) REFERENCES students (pid);

ALTER TABLE student_group_history
    ADD CONSTRAINT FK_STUDENT_GROUP_HISTORY_ON_ASSIGNED_BY_PID FOREIGN KEY (assigned_by_pid) REFERENCES users (pid);

ALTER TABLE student_group_history
    ADD CONSTRAINT FK_STUDENT_GROUP_HISTORY_ON_FROM_GROUP FOREIGN KEY (from_group_id) REFERENCES groups (id);

ALTER TABLE student_group_history
    ADD CONSTRAINT FK_STUDENT_GROUP_HISTORY_ON_STUDENT_PID FOREIGN KEY (student_pid) REFERENCES students (pid);

ALTER TABLE student_group_history
    ADD CONSTRAINT FK_STUDENT_GROUP_HISTORY_ON_TO_GROUP FOREIGN KEY (to_group_id) REFERENCES groups (id);

ALTER TABLE user_roles
    ADD CONSTRAINT FK_USER_ROLES_ON_ASSIGNED_BY_PID FOREIGN KEY (assigned_by_pid) REFERENCES users (pid);

ALTER TABLE user_roles
    ADD CONSTRAINT FK_USER_ROLES_ON_ROLE FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT FK_USER_ROLES_ON_USER_PID FOREIGN KEY (user_pid) REFERENCES users (pid);

ALTER TABLE volunteer_attendance
    ADD CONSTRAINT FK_VOLUNTEER_ATTENDANCE_ON_MARKED_BY_USER FOREIGN KEY (marked_by_user) REFERENCES users (pid);

ALTER TABLE volunteer_attendance
    ADD CONSTRAINT FK_VOLUNTEER_ATTENDANCE_ON_VOLUNTEER_PID FOREIGN KEY (volunteer_pid) REFERENCES volunteers (pid);

ALTER TABLE volunteer_requests
    ADD CONSTRAINT FK_VOLUNTEER_REQUESTS_ON_REQUESTED_BY_PID FOREIGN KEY (requested_by_pid) REFERENCES users (pid);

ALTER TABLE volunteer_requests
    ADD CONSTRAINT FK_VOLUNTEER_REQUESTS_ON_REVIEWED_BY_PID FOREIGN KEY (reviewed_by_pid) REFERENCES users (pid);